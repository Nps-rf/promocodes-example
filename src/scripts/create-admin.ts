import { NestFactory } from '@nestjs/core';
import { AppModule } from '../app.module';
import { UsersService } from '../users/users.service';
import { UserRole } from '../auth/decorators/roles.decorator';
import { DataSource } from 'typeorm';
import { User } from '../users/entities/user.entity';

async function createAdmin() {
  const app = await NestFactory.createApplicationContext(AppModule);
  const usersService = app.get(UsersService);
  const dataSource = app.get(DataSource);

  console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');

  try {
    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
    const adminData = {
      email: 'admin@example.com',
      password: 'admin123',
      firstName: 'Admin',
      lastName: 'User',
    };

    let admin;
    try {
      admin = await usersService.create(adminData);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${admin.email}`);
    } catch {
      console.log(`‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å...`);

      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Ä–æ–ª—å
      const userRepository = dataSource.getRepository(User);
      admin = await userRepository.findOne({
        where: { email: adminData.email },
      });

      if (admin) {
        admin.role = UserRole.ADMIN;
        await userRepository.save(admin);
        console.log(`‚úÖ –†–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è: ${admin.email}`);
      }
    }

    console.log('\nüéâ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤!');
    console.log('\n–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log(`Email: ${adminData.email}`);
    console.log(`Password: ${adminData.password}`);
    console.log('\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:');
    console.log('- POST /promocodes - —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤');
    console.log('- GET /promocodes/:id/usages - –ø—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–π');
    console.log('- PATCH /promocodes/:id/deactivate - –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
  } finally {
    await app.close();
  }
}

createAdmin();
